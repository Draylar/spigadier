plugins {
    id 'java'
    id 'maven-publish'
}

group = 'draylar'
version = '1.0.0'
description = 'Spigadier'

sourceCompatibility = JavaVersion.VERSION_16
targetCompatibility = JavaVersion.VERSION_16

Properties properties = new Properties()
if (rootProject.file("local.properties").exists()) {
    properties.load(rootProject.file("local.properties").newDataInputStream())
}

repositories {
    mavenLocal()

    maven {
        url = 'https://hub.spigotmc.org/nexus/content/repositories/snapshots/'
    }

    maven {
        url = 'https://oss.sonatype.org/content/groups/public/'
    }

    maven {
        url = 'https://repo.maven.apache.org/maven2/'
    }

    maven {
        name = "Minecraft Libraries"
        url = "https://libraries.minecraft.net"
    }
}

dependencies {
    compileOnly 'org.jetbrains:annotations:21.0.1'
    implementation 'com.mojang:brigadier:1.0.17'
    implementation 'org.spigotmc:spigot-api:1.16.5-R0.1-SNAPSHOT'
    implementation 'org.spigotmc:spigot:1.16.5-R0.1-SNAPSHOT'
}

publishing {
    repositories {
        maven {
            url "https://maven.draylar.dev/releases"
            credentials {
                username = properties.get("username")
                password = properties.get("token")
            }
            authentication {
                basic(BasicAuthentication)
            }
        }
    }

    publications {
        maven(MavenPublication) {
            groupId = 'draylar'
            artifactId = 'spigadier'
            version = project.version

            from components.java
        }
    }
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

// Task for packaging contents of /test/ into a .jar file
task packageTests(type: Jar) {
    from sourceSets.test.output
    archiveFileName = "spigadier-test-" + project.version + ".jar"
}

// Task for moving test .jar file into the /run/plugins/ directory
task copyTestJar(type: Copy) {
    from packageTests
    into 'run/plugins/'
}

// Task for moving the library .jar file into the /run/plugins/ directory
task copyJar(type: Copy) {
    from jar
    into 'run/plugins/'
}

build.dependsOn copyTestJar
build.dependsOn copyJar
build.dependsOn packageTests